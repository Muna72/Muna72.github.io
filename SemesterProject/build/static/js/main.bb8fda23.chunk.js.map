{"version":3,"sources":["serviceWorker.js","config.js","components/Navigation.jsx","components/Account.jsx","components/GenerateItems.jsx","components/Shop.jsx","components/GenerateOrders.jsx","components/Orders.jsx","components/SignIn.jsx","components/CreateAccount.jsx","components/Cart.jsx","components/Error.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","length","user","SearchBar","react_default","a","createElement","type","className","onFocus","Search","placeholder","id","Navigation","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillUnmount","_isMounted","setState","state","loggedIn","onAuthStateChanged","firebaseUser","bind","pathname","react_router_dom","to","src","alt","Navigation_SearchBar","Component","withRouter","storeProducts","items","GenerateItems","getCurrentUser","currentUser","addToCart","productKey","quantity","keys","redirect","writeUserData","resetQuantity","handleInputChange","e","name","defineProperty","target","value","products","_this2","productsRef","ref","child","on","snapshot","forEach","product","nextProduct","val","key","parseInt","push","once","then","alert","uid","update","_this3","react_router","map","index","imgUrl","min","max","onHand","onChange","onClick","currency_format_default","price","displayType","thousandSeparator","prefix","decimalScale","fixedDecimalScale","renderText","Shop","components_GenerateItems","rootRef","Account","that","assertThisInitialized","getUserInfo","signOut","customerInfo","shippingAddress","city","country","streetAddress","zip","catch","error","console","log","confirm","remove","u","credentials","EmailAuthProvider","credential","email","reauthenticateWithCredential","delete","updates","newPass","newPassword","confirmPassword","signInWithEmailAndPassword","currentPassword","updatePassword","err","size","defaultValue","htmlFor","updateInfo","changePassword","removeAccount","href","accountOrders","orders","GenerateOrders","stateIsSet","handleOnClick","order","reverse","orderDate","productsInOrder","totalPrice","Orders","components_GenerateOrders","userEmail","userPassword","SignIn","password","signInUser","preventDefault","pass","errorMsg","message","createUser","redirect_createAcc","handlePasswordChange","event","autoComplete","userRepeatPassword","CreateAccount","repeatPass","passwordRepeat","createUserWithEmailAndPassword","handleRepeatPasswordChange","set","cartItems","correspondingProduct","Map","orderTotal","ordersList","Cart","customerCartRef","getCurrentOrders","productQuantity","diff","removeFromCart","calculateOrderTotal","productID","newCart","i","emptyCart","numOfItems","addOrderToAccount","undefined","createNewOrder","changeProductQuantities","currentOnHand","remaining","q","cartItemsObj","date","Date","toDateString","c","current","description","Error","App","components_Navigation","path","exact","component","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb8fda23.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCB00wchyxzKiAuC7zD10eS0WSrXEQLVbU\",\r\n  authDomain: \"cis371semesterproject.firebaseapp.com\",\r\n  databaseURL: \"https://cis371semesterproject.firebaseio.com\",\r\n  projectId: \"cis371semesterproject\",\r\n  storageBucket: \"cis371semesterproject.appspot.com\",\r\n  messagingSenderId: \"54214005334\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport * as firebase from \"firebase\";\r\nimport { firebaseConfig } from \"../config\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nvar searching = false;\r\nvar user;\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      className=\"search\"\r\n      onFocus={Search}\r\n      placeholder=\"Search...\"\r\n    />\r\n  );\r\n};\r\n\r\nconst Search = () => {\r\n  return (\r\n    <div className=\"searchResults\" id=\"searchResults\">\r\n      <ul>\r\n        <li>\r\n          Search not found.\r\n          <br />\r\n          <sub>Try another search term.</sub>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass Navigation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: {},\r\n      loggedIn: false\r\n    };\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this._isMounted = false;\r\n    this.setState({ user: user });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    if ((this._isMounted = true)) {\r\n      firebase.auth().onAuthStateChanged(\r\n        function(firebaseUser) {\r\n          user = firebaseUser;\r\n          if (user) {\r\n            this.setState({ user: user, loggedIn: true });\r\n          } else {\r\n            this.setState({ loggedIn: false });\r\n          }\r\n        }.bind(this)\r\n      );\r\n    }\r\n  }\r\n\r\n  // rerenders on every click inside the nav\r\n\r\n  render() {\r\n    //console.log(\"logged in state: \" + this.state.loggedIn);\r\n\r\n    if (this.state.loggedIn && this.props.location.pathname === \"/\") {\r\n      return (\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\">\r\n                <img\r\n                  src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\r\n                  alt=\"logo\"\r\n                  id=\"logo\"\r\n                />\r\n              </NavLink>\r\n            </li>\r\n            <SearchBar />\r\n\r\n            <div className=\"menuItems\">\r\n              <div>\r\n                <li>\r\n                  <NavLink to=\"/Cart/\">Cart</NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to=\"/Account/\">Account</NavLink>\r\n                </li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n          {searching ? <Search /> : null}\r\n        </nav>\r\n      );\r\n    }\r\n\r\n    if (this.state.loggedIn && this.props.location.pathname !== \"/\") {\r\n      return (\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\">\r\n                <img\r\n                  src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\r\n                  alt=\"logo\"\r\n                  id=\"logo\"\r\n                />\r\n              </NavLink>\r\n            </li>\r\n\r\n            <div className=\"menuItems\">\r\n              <div>\r\n                <li>\r\n                  <NavLink to=\"/Cart/\">Cart</NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink to=\"/Account/\">Account</NavLink>\r\n                </li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n          {searching ? <Search /> : null}\r\n        </nav>\r\n      );\r\n    }\r\n\r\n    if (!this.state.loggedIn && this.props.location.pathname === \"/\") {\r\n      return (\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/\">\r\n                <img\r\n                  src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\r\n                  alt=\"logo\"\r\n                  id=\"logo\"\r\n                />\r\n              </NavLink>\r\n            </li>\r\n            <SearchBar />\r\n\r\n            <div className=\"menuItems\">\r\n              <div>\r\n                <li>\r\n                  <NavLink to=\"/SignIn/\">Sign In</NavLink>\r\n                </li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n          {searching ? <Search /> : null}\r\n        </nav>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/\">\r\n              <img\r\n                src=\"https://github.com/Muna72/CIS371_GroupProject/blob/master/eshop-app/src/img/amazoff.gif?raw=true\"\r\n                alt=\"logo\"\r\n                id=\"logo\"\r\n              />\r\n            </NavLink>\r\n          </li>\r\n\r\n          <div className=\"menuItems\">\r\n            <div>\r\n              <li>\r\n                <NavLink to=\"/SignIn/\">Sign In</NavLink>\r\n              </li>\r\n            </div>\r\n          </div>\r\n        </ul>\r\n        {searching ? <Search /> : null}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nvar db = firebase.database();\r\nvar rootRef = db.ref();\r\nvar user;\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      user: {},\r\n      name: \"\",\r\n      shippingAddress: {},\r\n      city: \"\",\r\n      country: \"\",\r\n      state: \"\",\r\n      streetAddress: \"\",\r\n      zip: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    if (this._isMounted) {\r\n      this.getCurrentUser();\r\n    }\r\n  }\r\n\r\n  getCurrentUser = () => {\r\n    const that = this;\r\n    firebase.auth().onAuthStateChanged(firebaseUser => {\r\n      if (firebaseUser) {\r\n        user = firebaseUser;\r\n        that.setState(\r\n          {\r\n            user: user\r\n          },\r\n          that.getUserInfo\r\n        );\r\n      } else {\r\n        that.setState(\r\n          {\r\n            user: {}\r\n          },\r\n          that.signOut\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  getUserInfo = () => {\r\n    if (user) {\r\n      var that = this;\r\n\r\n      return firebase\r\n        .database()\r\n        .ref(\"/customers/\" + this.state.user.uid)\r\n        .once(\"value\")\r\n        .then(function(snapshot) {\r\n          var customerInfo = snapshot.val();\r\n          that.setState({\r\n            name: customerInfo.name,\r\n            shippingAddress: customerInfo.shippingAddress,\r\n            city: customerInfo.shippingAddress.city,\r\n            country: customerInfo.shippingAddress.country,\r\n            state: customerInfo.shippingAddress.state,\r\n            streetAddress: customerInfo.shippingAddress.streetAddress,\r\n            zip: customerInfo.shippingAddress.zip\r\n          });\r\n        });\r\n    } else {\r\n      this.signOut();\r\n    }\r\n  };\r\n\r\n  handleInputChange = (e, name) => {\r\n    this.setState({\r\n      [name]: e.target.value\r\n    });\r\n  };\r\n\r\n  removeAccount() {\r\n    var answer = window.confirm(\r\n      \"Are you sure you want to PERMENANTLY delete account and all user data?\"\r\n    );\r\n\r\n    if (answer === true) {\r\n      let childRef = rootRef.child(\"customers\").child(this.state.user.uid);\r\n      childRef.remove();\r\n\r\n      let u = firebase.auth().currentUser;\r\n\r\n      let credentials = firebase.auth.EmailAuthProvider.credential(\r\n        this.state.user.email,\r\n        \"firebase\"\r\n      );\r\n      u.reauthenticateWithCredential(credentials);\r\n\r\n      u.delete()\r\n        .then(function() {\r\n          alert(\"Account Sucessfully deleted\");\r\n        })\r\n        .catch(function(error) {\r\n          alert(\"An error occured - action aborted\" + error);\r\n        });\r\n\r\n      this.setState({ redirect: true });\r\n    }\r\n  }\r\n\r\n  updateInfo() {\r\n    console.log(\"updating info for \", this.state.user.email);\r\n\r\n    // Write the new post's data simultaneously in the posts list and the user's post list.\r\n    var updates = {};\r\n    updates[\"/customers/\" + this.state.user.uid + \"/name/\"] = this.state.name;\r\n    updates[\r\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/city\"\r\n    ] = this.state.city;\r\n    updates[\r\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/country\"\r\n    ] = this.state.country;\r\n    updates[\r\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/state\"\r\n    ] = this.state.state;\r\n    updates[\r\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/streetAddress\"\r\n    ] = this.state.streetAddress;\r\n    updates[\r\n      \"/customers/\" + this.state.user.uid + \"/shippingAddress/zip\"\r\n    ] = this.state.zip;\r\n\r\n    console.log(\r\n      firebase\r\n        .database()\r\n        .ref()\r\n        .update(updates)\r\n    );\r\n  }\r\n\r\n  changePassword() {\r\n    var newPass = this.state.newPassword;\r\n\r\n    if (this.state.newPassword === this.state.confirmPassword) {\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(\r\n          this.state.user.email,\r\n          this.state.currentPassword\r\n        )\r\n        .then(function(user) {\r\n          firebase\r\n            .auth()\r\n            .currentUser.updatePassword(newPass)\r\n            .then(function() {\r\n              alert(\"Password updated successfully\");\r\n            })\r\n            .catch(function(err) {\r\n              alert(\"Error: \" + err);\r\n            });\r\n        })\r\n        .catch(function(err) {\r\n          alert(\"Error: \" + err);\r\n        });\r\n    } else {\r\n      alert(\"New password fields do not match. Please re-enter new password.\");\r\n    }\r\n  }\r\n\r\n  signOut = () => {\r\n    const that = this;\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(function() {\r\n        that.setState({ user: {}, redirect: true });\r\n      })\r\n      .catch(function(error) {\r\n        // An error happened.\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect push to=\"/\" />;\r\n    }\r\n\r\n    if (user && user.email) {\r\n      return (\r\n        <div className=\"main\">\r\n          <h1 id=\"welcome\">Welcome, {this.state.user.email}!</h1>\r\n          <h2 id=\"acctInfo\">Account Information</h2>\r\n          <div id=\"userInfoForm\">\r\n            <label>Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              size=\"35\"\r\n              defaultValue={this.state.name}\r\n              onChange={e => this.handleInputChange(e, \"name\")}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"address\">Street Address:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"address\"\r\n              size=\"35\"\r\n              defaultValue={this.state.shippingAddress.streetAddress}\r\n              onChange={e => this.handleInputChange(e, \"streetAddress\")}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"city\">City:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"city\"\r\n              size=\"35\"\r\n              defaultValue={this.state.shippingAddress.city}\r\n              onChange={e => this.handleInputChange(e, \"city\")}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"state\">State:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"state\"\r\n              size=\"35\"\r\n              defaultValue={this.state.shippingAddress.state}\r\n              onChange={e => this.handleInputChange(e, \"state\")}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"zip\">Zip Code:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"zip\"\r\n              size=\"35\"\r\n              defaultValue={this.state.shippingAddress.zip}\r\n              onChange={e => this.handleInputChange(e, \"zip\")}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"country\">Country:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"country\"\r\n              size=\"35\"\r\n              defaultValue={this.state.shippingAddress.country}\r\n              onChange={e => this.handleInputChange(e, \"country\")}\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              className=\"submit\"\r\n              value=\"Submit Changes\"\r\n              onClick={() => {\r\n                this.updateInfo();\r\n              }}\r\n            />\r\n            <h3 className=\"acctTitles\">Change Your Password</h3>\r\n            <label htmlFor=\"password\">Current Password:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"password\"\r\n              onChange={e => this.handleInputChange(e, \"currentPassword\")}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"newPassword\">New Password:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newPassword\"\r\n              onChange={e => this.handleInputChange(e, \"newPassword\")}\r\n            />\r\n            <br />\r\n            <label htmlFor=\"confirmPassword\">Confirm New Password:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"confirmPassword\"\r\n              onChange={e => this.handleInputChange(e, \"confirmPassword\")}\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Update\"\r\n              className=\"submit\"\r\n              onClick={() => {\r\n                this.changePassword();\r\n              }}\r\n            />\r\n            <h3 className=\"acctTitles\">Delete Account</h3>\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Delete\"\r\n              className=\"submit\"\r\n              onClick={() => {\r\n                this.removeAccount();\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"sidenav\">\r\n            <a href=\"/Orders\">My Orders</a>\r\n            <br />\r\n            <a href=\"/Cart\">Current Cart</a>\r\n            <p onClick={this.signOut}>Logout</p>\r\n            <br />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <p>Loading...</p>\r\n        <div className=\"sidenav\">\r\n          <a href=\"/Orders\">My Orders</a>\r\n          <br />\r\n          <a href=\"/Cart\">Current Cart</a>\r\n          <p onClick={this.signOut}>Logout</p>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport { Redirect } from \"react-router\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nvar storeProducts = [];\r\nvar items = null;\r\n\r\nclass GenerateItems extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            products: [],\r\n            user: {},\r\n            quantity: 1\r\n        };\r\n\r\n        this._isMounted = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n        if (this._isMounted) {\r\n            this.getCurrentUser();\r\n        }\r\n        // set up listeners and download data to be rendered to DOM\r\n        const rootRef = firebase.database().ref(); // ref() points to root node without arguement\r\n        const productsRef = rootRef.child(\"products\");\r\n\r\n        storeProducts = [];\r\n\r\n        productsRef.on(\"value\", snapshot => {\r\n            storeProducts = [];\r\n            snapshot.forEach(function(product) {\r\n                // give each object a temporary element containing their key\r\n                var nextProduct = product.val();\r\n                nextProduct.key = parseInt(product.key);\r\n\r\n                storeProducts.push(nextProduct);\r\n            });\r\n\r\n            if (this._isMounted) {\r\n                this.setState({\r\n                    products: storeProducts\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    getCurrentUser = () => {\r\n        firebase.auth().onAuthStateChanged(firebaseUser => {\r\n            if (firebaseUser) {\r\n                this.setState({\r\n                    user: firebase.auth().currentUser\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    writeUserData(user, productKey, quantity) {\r\n        // first check to make sure there is enough remaining before adding it to the cart\r\n        var quantityRemaining;\r\n\r\n        firebase\r\n            .database()\r\n            .ref(\"/products/\" + productKey)\r\n            .child(\"onHand\")\r\n            .once(\"value\")\r\n            .then(function(snapshot) {\r\n                quantityRemaining = snapshot.val();\r\n\r\n                if (quantityRemaining < quantity) {\r\n                    alert(\"Not enough remain!\");\r\n                } else {\r\n                    firebase\r\n                        .database()\r\n                        .ref(\"customers/\" + user.uid)\r\n                        .child(\"cart\")\r\n                        .update({\r\n                            [productKey]: parseInt(quantity, 10)\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    addToCart = (productKey, quantity) => {\r\n        // if they are not logged in, go to the sign in page\r\n        if (quantity > 0) {\r\n            if (this.state.user && Object.keys(this.state.user).length === 0) {\r\n                this.setState({ redirect: true });\r\n            } else {\r\n                // user is logged in. add the item to the cart.\r\n                this.writeUserData(this.state.user, productKey, quantity);\r\n                this.resetQuantity();\r\n            }\r\n        }\r\n    };\r\n\r\n    resetQuantity() {\r\n        this.setState({ quantity: 1 });\r\n    }\r\n\r\n    // handle input changed.\r\n    handleInputChange = (e, name) => {\r\n        this.setState({\r\n            [name]: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect push to=\"/SignIn/\" />;\r\n        }\r\n\r\n        items = null;\r\n\r\n        // key could also be product.key\r\n        items = storeProducts.map((product, index) => (\r\n            <div key={index} className=\"storeItem\">\r\n                <div className=\"thumbnailContainer\">\r\n                    <img src={product.imgUrl} className=\"thumbnail\" alt=\"\" />\r\n                </div>\r\n                <div className=\"itemActions\">\r\n                    <input\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max={product.onHand}\r\n                        value={this.state.quantity}\r\n                        onChange={e => this.handleInputChange(e, \"quantity\")}\r\n                    />\r\n\r\n                    <button\r\n                        onClick={() => this.addToCart(product.key, this.state.quantity)}\r\n                    >\r\n                        Add to Cart\r\n                    </button>\r\n                    <p className=\"quantityRemaining\">\r\n                        Quantity Remaining: {product.onHand}\r\n                    </p>\r\n                </div>\r\n                <div className=\"itemDetails\">\r\n                    <p>\r\n                        <b>{product.name}</b>\r\n                    </p>\r\n                    <CurrencyFormat\r\n                        value={product.price}\r\n                        displayType={\"text\"}\r\n                        thousandSeparator={true}\r\n                        prefix={\"$\"}\r\n                        decimalScale={2}\r\n                        fixedDecimalScale={true}\r\n                        renderText={value => <div>{value}</div>}\r\n                    />\r\n                </div>\r\n            </div>\r\n        ));\r\n\r\n        return <div>{items}</div>;\r\n    }\r\n}\r\n\r\nexport default GenerateItems;","import React from \"react\";\r\nimport GenerateItems from \"./GenerateItems\";\r\n/* is used incase we want to render multiple components onto the same page.\r\neach componenet could be styled and placed on the page.\r\n*/\r\n\r\nconst Shop = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <GenerateItems />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nvar accountOrders = [];\r\nvar orders = null;\r\n\r\nclass GenerateOrders extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {},\r\n      orders: []\r\n    };\r\n  }\r\n\r\n  getCurrentUser = () => {\r\n    firebase.auth().onAuthStateChanged(firebaseUser => {\r\n      if (firebaseUser) {\r\n        this.setState(\r\n          {\r\n            user: firebase.auth().currentUser\r\n          },\r\n          this.stateIsSet\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  handleOnClick = () => {\r\n    // some action...\r\n    // then redirect\r\n    this.setState({ redirect: true });\r\n  };\r\n\r\n  // called after rendered to DOM\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    if (this._isMounted) {\r\n      this.getCurrentUser();\r\n    }\r\n\r\n    this.setState({\r\n      orders: null\r\n    });\r\n\r\n    accountOrders = [];\r\n  }\r\n\r\n  stateIsSet = () => {\r\n    // fetch the current items in the cart\r\n    const rootRef = firebase.database().ref();\r\n    const ordersRef = rootRef\r\n      .child(\"customers\")\r\n      .child(this.state.user.uid)\r\n      .child(\"orders\");\r\n\r\n    ordersRef.on(\"child_added\", snapshot => {\r\n      var order = snapshot.val();\r\n\r\n      accountOrders.push(order);\r\n\r\n      this.setState({\r\n        orders: accountOrders\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (accountOrders.length > 0) {\r\n      // display newest orders first\r\n      accountOrders.reverse();\r\n\r\n      orders = accountOrders.map((order, index) => (\r\n        <div className=\"orderDetails\" key={index}>\r\n          <div className=\"orderHeader\">Order from {order.orderDate}</div>\r\n          <ul>\r\n            {Object.keys(order.productsInOrder).map((product, index) => (\r\n              <li key={index}>\r\n                <span className=\"itemName\">{product}</span>\r\n\r\n                <CurrencyFormat\r\n                  value={order.productsInOrder[product]}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                  decimalScale={2}\r\n                  fixedDecimalScale={true}\r\n                  renderText={value => (\r\n                    <span className=\"itemPrice\">{value}</span>\r\n                  )}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"orderPrice\">\r\n            <CurrencyFormat\r\n              value={order.totalPrice}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"$\"}\r\n              decimalScale={2}\r\n              fixedDecimalScale={true}\r\n              renderText={value => <div>Total Order Price: {value}</div>}\r\n            />\r\n          </div>\r\n        </div>\r\n      ));\r\n\r\n      return <div>{orders}</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h2 id=\"ordersNote\">You have no past orders yet</h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GenerateOrders;\r\n","import React, { Component } from \"react\";\r\nimport GenerateOrders from \"./GenerateOrders\";\r\n\r\n/*const Orders = () => {\r\n    return (\r\n        <div className=\"main\">\r\n            <h2>Past Orders</h2>\r\n            <GenerateOrders />\r\n        </div>\r\n    );\r\n}; */\r\n\r\nclass Orders extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <h2 id=\"pastOrders\">Order History</h2>\r\n        <GenerateOrders />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Orders;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport * as firebase from \"firebase\";\r\n\r\nvar userEmail = \"\";\r\nvar userPassword = \"\";\r\nvar user = {};\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      user: {},\r\n      redirect: false,\r\n      redirect_createAcc: false,\r\n      errorMsg: \"\"\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this._isMounted = false;\r\n    this.setState({\r\n      user: user,\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    });\r\n  };\r\n\r\n  handleInputChange(event) {\r\n    this.setState({ email: event.target.value }, function() {\r\n      userEmail = this.state.email;\r\n    });\r\n  }\r\n\r\n  handlePasswordChange(event) {\r\n    this.setState({ password: event.target.value }, function() {\r\n      userPassword = this.state.password;\r\n    });\r\n  }\r\n\r\n  signInUser = e => {\r\n    e.preventDefault();\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n\r\n    console.log(\"Email: \" + userEmail);\r\n    console.log(\"Password: \" + userPassword);\r\n\r\n    // reset error message\r\n    this.setState({ errorMsg: \"\" });\r\n\r\n    if (email === \"\" || pass === \"\") {\r\n      this.setState({ errorMsg: \"Please fill all fields.\" });\r\n    } else {\r\n      const that = this;\r\n\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, pass)\r\n        .catch(function(error) {\r\n          // Handle Errors here.\r\n          //var errorCode = error.code;\r\n          that.setState({ errorMsg: error.message });\r\n          // ...\r\n        });\r\n\r\n      firebase.auth().onAuthStateChanged(firebaseUser => {\r\n        if (firebaseUser) {\r\n          // redirect to new page and update nav\r\n          console.log(firebaseUser);\r\n          user = firebaseUser;\r\n          if (this._isMounted) {\r\n            this.setState({ redirect: true });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  createUser = e => {\r\n    e.preventDefault();\r\n    this.setState({ redirect_createAcc: true });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return (\r\n        <Redirect\r\n          push\r\n          to={{\r\n            pathname: \"/\",\r\n            state: {\r\n              user: this.state.user,\r\n              loggedIn: true\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (this.state.redirect_createAcc) {\r\n      return (\r\n        <Redirect\r\n          push\r\n          to={{\r\n            pathname: \"/CreateAccount/\",\r\n            state: { email: this.state.email, password: this.state.password }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    // error message present\r\n    if (this.state.errorMsg) {\r\n      return (\r\n        <div className=\"main\">\r\n          <div className=\"sign-up-container\">\r\n            <form>\r\n              <input\r\n                type=\"email\"\r\n                className=\"field\"\r\n                id=\"email\"\r\n                defaultValue={this.state.email}\r\n                placeholder=\"Email\"\r\n                onChange={this.handleInputChange}\r\n                autoComplete=\"email\"\r\n              />\r\n              <p className=\"errormsg\" id=\"email_error_1\" />\r\n              <input\r\n                type=\"password\"\r\n                className=\"field\"\r\n                id=\"password\"\r\n                defaultValue={this.state.password}\r\n                placeholder=\"Password\"\r\n                onChange={this.handlePasswordChange}\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <p className=\"errormsg\" id=\"password_error_1\">\r\n                {this.state.errorMsg}\r\n              </p>\r\n              <div className=\"formButtons\">\r\n                <button onClick={this.signInUser} className=\"formBtn signIn\">\r\n                  Sign In\r\n                </button>\r\n                <button\r\n                  onClick={this.createUser}\r\n                  className=\"formBtn createAccount\"\r\n                >\r\n                  Create Account\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"sign-up-container\">\r\n          <form>\r\n            <input\r\n              type=\"email\"\r\n              className=\"field\"\r\n              id=\"email\"\r\n              defaultValue={this.state.email}\r\n              placeholder=\"Email\"\r\n              onChange={this.handleInputChange}\r\n              autoComplete=\"email\"\r\n            />\r\n            <p className=\"errormsg\" id=\"email_error_1\" />\r\n            <input\r\n              type=\"password\"\r\n              className=\"field\"\r\n              id=\"password\"\r\n              defaultValue={this.state.password}\r\n              placeholder=\"Password\"\r\n              onChange={this.handlePasswordChange}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <p className=\"errormsg\" id=\"password_error_1\">\r\n              <br />\r\n            </p>\r\n            <div className=\"formButtons\">\r\n              <button onClick={this.signInUser} className=\"formBtn signIn\">\r\n                Sign In\r\n              </button>\r\n              <button\r\n                onClick={this.createUser}\r\n                className=\"formBtn createAccount\"\r\n              >\r\n                Create Account\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport * as firebase from \"firebase\";\r\n\r\nvar userEmail = \"\";\r\nvar userPassword = \"\";\r\nvar userRepeatPassword = \"\";\r\n\r\nclass CreateAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordRepeat: \"\",\r\n      redirect: false,\r\n      errorMsg: \"\"\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    this.handleRepeatPasswordChange = this.handleRepeatPasswordChange.bind(\r\n      this\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    if (this._isMounted) {\r\n      this.setState({\r\n        email: this.props.location.state.email,\r\n        password: this.props.location.state.password\r\n      });\r\n    }\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    this.setState({ email: event.target.value }, function() {\r\n      userEmail = this.state.email;\r\n    });\r\n  }\r\n\r\n  handlePasswordChange(event) {\r\n    this.setState({ password: event.target.value }, function() {\r\n      userPassword = this.state.password;\r\n    });\r\n  }\r\n\r\n  handleRepeatPasswordChange(event) {\r\n    this.setState({ passwordRepeat: event.target.value }, function() {\r\n      userRepeatPassword = this.state.passwordRepeat;\r\n    });\r\n  }\r\n\r\n  // creates a customer account for them using their unique user id\r\n  // this can hold their cart, orders, info, etc.\r\n  writeUserData(user) {\r\n    firebase\r\n      .database()\r\n      .ref(\"customers/\" + user.uid)\r\n      .set({\r\n        email: user.email,\r\n        name: \"\",\r\n        shippingAddress: {\r\n          streetAddress: \"\",\r\n          city: \"\",\r\n          state: \"\",\r\n          zip: \"\",\r\n          country: \"\"\r\n        }\r\n      });\r\n  }\r\n\r\n  createUser = e => {\r\n    e.preventDefault();\r\n\r\n    var email = this.state.email;\r\n    var pass = this.state.password;\r\n    var repeatPass = this.state.passwordRepeat;\r\n\r\n    console.log(\"Email: \" + userEmail);\r\n    console.log(\"Password: \" + userPassword);\r\n    console.log(\"Repeat Password: \" + userRepeatPassword);\r\n\r\n    // reset error message\r\n    this.setState({ errorMsg: \"\" });\r\n\r\n    if (email === \"\" || pass === \"\" || repeatPass === \"\") {\r\n      this.setState({ errorMsg: \"Please fill all fields.\" });\r\n    } else if (pass !== repeatPass) {\r\n      this.setState({ errorMsg: \"Passwords do not match.\" });\r\n    } else {\r\n      const that = this;\r\n\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, pass)\r\n        .catch(function(error) {\r\n          // Handle Errors here.\r\n          that.setState({ errorMsg: error.message });\r\n          // ...\r\n        });\r\n\r\n      firebase.auth().onAuthStateChanged(user => {\r\n        if (user) {\r\n          user = firebase.auth().currentUser;\r\n\r\n          // save a space for them in the realtime database\r\n          this.writeUserData(user);\r\n        }\r\n      });\r\n\r\n      firebase.auth().onAuthStateChanged(firebaseUser => {\r\n        if (firebaseUser) {\r\n          console.log(firebaseUser);\r\n          if (this._isMounted) {\r\n            this.setState({ redirect: true });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect push to=\"/Account/\" />;\r\n    }\r\n\r\n    // if an error message is present\r\n    if (this.state.errorMsg) {\r\n      return (\r\n        <div className=\"main\">\r\n          <div className=\"sign-up-container\">\r\n            <form>\r\n              <input\r\n                type=\"email\"\r\n                className=\"field\"\r\n                id=\"email\"\r\n                defaultValue={this.props.location.state.email}\r\n                placeholder=\"Email\"\r\n                onChange={this.handleInputChange}\r\n                autoComplete=\"email\"\r\n              />\r\n              <p className=\"errormsg\" id=\"email_error_1\" />\r\n              <input\r\n                type=\"password\"\r\n                className=\"field\"\r\n                id=\"password\"\r\n                defaultValue={this.props.location.state.password}\r\n                placeholder=\"Password\"\r\n                onChange={this.handlePasswordChange}\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <p className=\"errormsg\" id=\"password_error_1\" />\r\n              <input\r\n                type=\"password\"\r\n                className=\"field\"\r\n                id=\"repeat_password\"\r\n                defaultValue=\"\"\r\n                placeholder=\"Repeat Password\"\r\n                onChange={this.handleRepeatPasswordChange}\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <p className=\"errormsg\" id=\"password_error_1\">\r\n                {this.state.errorMsg}\r\n              </p>\r\n              <div className=\"formButtons\">\r\n                <button\r\n                  onClick={this.createUser}\r\n                  className=\"formBtn createAccount\"\r\n                >\r\n                  Create Account\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"sign-up-container\">\r\n          <form>\r\n            <input\r\n              type=\"email\"\r\n              className=\"field\"\r\n              id=\"email\"\r\n              defaultValue={this.props.location.state.email}\r\n              placeholder=\"Email\"\r\n              onChange={this.handleInputChange}\r\n              autoComplete=\"email\"\r\n            />\r\n            <p className=\"errormsg\" id=\"email_error_1\" />\r\n            <input\r\n              type=\"password\"\r\n              className=\"field\"\r\n              id=\"password\"\r\n              defaultValue={this.props.location.state.password}\r\n              placeholder=\"Password\"\r\n              onChange={this.handlePasswordChange}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <p className=\"errormsg\" id=\"password_error_1\" />\r\n            <input\r\n              type=\"password\"\r\n              className=\"field\"\r\n              id=\"repeat_password\"\r\n              defaultValue=\"\"\r\n              placeholder=\"Repeat Password\"\r\n              onChange={this.handleRepeatPasswordChange}\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <p className=\"errormsg\" id=\"password_error_1\">\r\n              <br />\r\n            </p>\r\n            <div className=\"formButtons\">\r\n              <button\r\n                onClick={this.createUser}\r\n                className=\"formBtn createAccount\"\r\n              >\r\n                Create Account\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateAccount;\r\n","import React, { Component } from \"react\";\r\nimport * as firebase from \"firebase\";\r\nimport { Redirect } from \"react-router\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nvar cartItems = [];\r\nvar correspondingProduct = {};\r\nvar items = new Map();\r\nvar orderTotal = 0.0;\r\nvar newOrder = {};\r\nvar ordersList = [];\r\n\r\nclass Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n      user: {},\r\n      cartItems: [],\r\n      orderTotal: 0.0,\r\n      orders: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n\r\n    if (this._isMounted) {\r\n      this.getCurrentUser();\r\n    }\r\n  }\r\n\r\n  getCurrentUser = () => {\r\n    firebase.auth().onAuthStateChanged(firebaseUser => {\r\n      if (firebaseUser) {\r\n        this.setState(\r\n          {\r\n            user: firebase.auth().currentUser\r\n          },\r\n          this.stateIsSet\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  stateIsSet = () => {\r\n    // fetch the current items in the cart\r\n    const rootRef = firebase.database().ref();\r\n    const customerCartRef = rootRef\r\n      .child(\"customers\")\r\n      .child(this.state.user.uid)\r\n      .child(\"cart\");\r\n\r\n    cartItems = [];\r\n    this.getCurrentOrders();\r\n\r\n    customerCartRef.on(\"child_added\", snapshot => {\r\n      var productKey = snapshot.key;\r\n      var productQuantity = snapshot.val();\r\n\r\n      var that = this;\r\n\r\n      // get the product matching this key\r\n      firebase\r\n        .database()\r\n        .ref(\"/products/\")\r\n        .child(productKey)\r\n        .once(\"value\")\r\n        .then(function(snapshot) {\r\n          correspondingProduct = snapshot.val();\r\n          correspondingProduct.key = productKey;\r\n          correspondingProduct.quantity = productQuantity;\r\n          console.log(correspondingProduct);\r\n\r\n          // if any items are in the cart that have a quantity less than what remains\r\n          if (\r\n            correspondingProduct.onHand < productQuantity &&\r\n            correspondingProduct.onHand > 0\r\n          ) {\r\n            let diff = productQuantity - correspondingProduct.onHand;\r\n\r\n            if (diff === 1) {\r\n              alert(\r\n                diff +\r\n                  ' \"' +\r\n                  correspondingProduct.name +\r\n                  '\" was removed from the cart. Not enough remain.'\r\n              );\r\n            } else {\r\n              alert(\r\n                diff +\r\n                  ' \"' +\r\n                  correspondingProduct.name +\r\n                  '\"s were removed from the cart. Not enough remain.'\r\n              );\r\n            }\r\n\r\n            cartItems.push([\r\n              productKey,\r\n              correspondingProduct.onHand,\r\n              correspondingProduct\r\n            ]);\r\n\r\n            // update firebase to the new quantity remaining\r\n            var updates = {};\r\n            updates[\r\n              \"/customers/\" + that.state.user.uid + \"/cart/\" + productKey\r\n            ] = correspondingProduct.onHand;\r\n\r\n            firebase\r\n              .database()\r\n              .ref()\r\n              .update(updates);\r\n          } else if (correspondingProduct.onHand <= 0) {\r\n            alert(\r\n              correspondingProduct.name +\r\n                \" was removed from the cart. None remain.\"\r\n            );\r\n\r\n            // delete the item from the cart since none remain\r\n            that.removeFromCart(productKey);\r\n          } else {\r\n            // add it normally\r\n            cartItems.push([productKey, productQuantity, correspondingProduct]);\r\n          }\r\n\r\n          that.setState(\r\n            {\r\n              cartItems: cartItems\r\n            },\r\n            that.calculateOrderTotal()\r\n          );\r\n        });\r\n    });\r\n  };\r\n\r\n  removeFromCart = productID => {\r\n    // if they are not logged in, go to the sign in page\r\n    // keep the reference to what THIS is\r\n    var that = this;\r\n\r\n    var adaRef = firebase\r\n      .database()\r\n      .ref(\"customers/\" + this.state.user.uid + \"/cart/\" + productID);\r\n    adaRef\r\n      .remove()\r\n      .then(function() {\r\n        // successfully removed\r\n\r\n        // now update the cart list\r\n        var newCart = [];\r\n        for (var i = 0; i < cartItems.length; i++) {\r\n          if (cartItems[i][0] !== productID) {\r\n            newCart.push(cartItems[i]);\r\n          }\r\n        }\r\n\r\n        cartItems = newCart;\r\n        newCart = [];\r\n        correspondingProduct = {};\r\n\r\n        // update the state so that the cart refreshes\r\n        that.setState(\r\n          {\r\n            cartItems: cartItems\r\n          },\r\n          that.calculateOrderTotal\r\n        );\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Remove failed: \" + error.message);\r\n      });\r\n  };\r\n\r\n  emptyCart = () => {\r\n    // if they are not logged in, go to the sign in page\r\n    // keep the reference to what THIS is\r\n    var that = this;\r\n\r\n    var adaRef = firebase\r\n      .database()\r\n      .ref(\"customers/\" + this.state.user.uid + \"/cart/\");\r\n    adaRef\r\n      .remove()\r\n      .then(function() {\r\n        // successfully removed entire cart\r\n\r\n        // now update the cart list\r\n        cartItems = [];\r\n        correspondingProduct = {};\r\n\r\n        // update the state so that the cart refreshes\r\n        that.setState(\r\n          {\r\n            cartItems: []\r\n          },\r\n          that.calculateOrderTotal\r\n        );\r\n      })\r\n      .catch(function(error) {\r\n        console.log(\"Remove all failed: \" + error.message);\r\n      });\r\n  };\r\n\r\n  calculateOrderTotal = () => {\r\n    // loop through all cart items\r\n    orderTotal = 0;\r\n\r\n    var numOfItems = cartItems.length;\r\n    for (var i = 0; i < numOfItems; i++) {\r\n      let price = cartItems[i][2].price;\r\n      let quantity = parseInt(cartItems[i][1]);\r\n      orderTotal += price * quantity;\r\n    }\r\n\r\n    this.setState({\r\n      orderTotal: orderTotal\r\n    });\r\n  };\r\n\r\n  getCurrentOrders = () => {\r\n    // need to get their name and shipping address\r\n    var that = this;\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"/customers/\" + this.state.user.uid)\r\n      .once(\"value\")\r\n      .then(function(snapshot) {\r\n        var customerInfo = snapshot.val();\r\n\r\n        // save locally\r\n        ordersList = customerInfo.orders;\r\n\r\n        that.setState({\r\n          orders: customerInfo.orders\r\n        });\r\n      });\r\n  };\r\n\r\n  createNewOrder() {\r\n    var cartItemsObj = {};\r\n    var date = new Date();\r\n\r\n    date = date.toDateString();\r\n\r\n    for (var c = 0; c < cartItems.length; ++c) {\r\n      var current = cartItems[c];\r\n      cartItemsObj[current[2].name] = current[2].price;\r\n    }\r\n\r\n    newOrder = {\r\n      orderDate: date,\r\n      productsInOrder: cartItemsObj,\r\n      totalPrice: this.state.orderTotal\r\n    };\r\n\r\n    return newOrder;\r\n  }\r\n\r\n  addOrderToAccount = () => {\r\n    if (this.state.cartItems.length > 0) {\r\n      if (this.state.orders === undefined) {\r\n        ordersList = [];\r\n      }\r\n\r\n      ordersList.push(this.createNewOrder());\r\n\r\n      this.setState({\r\n        orders: ordersList\r\n      });\r\n\r\n      var updates = {};\r\n      updates[\"/customers/\" + this.state.user.uid + \"/orders/\"] = ordersList;\r\n\r\n      firebase\r\n        .database()\r\n        .ref()\r\n        .update(updates);\r\n\r\n      alert(\"Order completed successfully. Thank you for your business!\");\r\n      this.changeProductQuantities();\r\n      this.emptyCart();\r\n    }\r\n  };\r\n\r\n  changeProductQuantities = () => {\r\n    var updates = {};\r\n    var currentOnHand = 0;\r\n    var productKey = 0;\r\n    var productQuantity = 0;\r\n    var remaining = 0;\r\n\r\n    firebase\r\n      .database()\r\n      .ref(\"/products/\")\r\n      .once(\"value\")\r\n      .then(function(snapshot) {\r\n        for (let q = 0; q < cartItems.length; ++q) {\r\n          currentOnHand = cartItems[q][2].onHand;\r\n          productQuantity = cartItems[q][2].quantity;\r\n          productKey = cartItems[q][0];\r\n\r\n          remaining = currentOnHand - productQuantity;\r\n\r\n          updates[\"/products/\" + productKey + \"/onHand/\"] = remaining;\r\n        }\r\n\r\n        firebase\r\n          .database()\r\n          .ref()\r\n          .update(updates);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect push to=\"/SignIn/\" />;\r\n    }\r\n\r\n    // ERROR: keys are showing as duplicates if a cart item is deleted\r\n    // and added back in without refreshing the page\r\n    items = cartItems.map(product => (\r\n      <tr key={product[0]}>\r\n        <td>\r\n          <img src={product[2].imgUrl} className=\"thumbnail\" alt=\"\" />\r\n        </td>\r\n        <td>{product[2].name}</td>\r\n        <td>{product[2].description}</td>\r\n        <td>{product[1]}</td>\r\n        <td>\r\n          <CurrencyFormat\r\n            value={product[2].price}\r\n            displayType={\"text\"}\r\n            thousandSeparator={true}\r\n            prefix={\"$\"}\r\n            decimalScale={2}\r\n            fixedDecimalScale={true}\r\n            renderText={value => <div>{value}</div>}\r\n          />\r\n        </td>\r\n        <td>\r\n          <button\r\n            onClick={() => this.removeFromCart(product[0])}\r\n            className=\"checkoutBtn\"\r\n          >\r\n            Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <button\r\n          className=\"checkoutBtn\"\r\n          onClick={() => this.addOrderToAccount()}\r\n        >\r\n          Proceed to Checkout\r\n        </button>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <th>Image</th>\r\n              <th>Item Name</th>\r\n              <th>Description</th>\r\n              <th>Quantity</th>\r\n              <th>Price</th>\r\n              <th>Action</th>\r\n            </tr>\r\n            {items}\r\n            <tr>\r\n              <td />\r\n              <td />\r\n              <td />\r\n              <td />\r\n              <td>\r\n                <p>\r\n                  <b>Order Total:</b>\r\n                </p>\r\n                <CurrencyFormat\r\n                  value={this.state.orderTotal}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  prefix={\"$\"}\r\n                  decimalScale={2}\r\n                  fixedDecimalScale={true}\r\n                  renderText={value => <div>{value}</div>}\r\n                />\r\n              </td>\r\n              <td>\r\n                {\" \"}\r\n                <button\r\n                  onClick={() => this.emptyCart()}\r\n                  className=\"checkoutBtn emptyCartBtn\"\r\n                >\r\n                  Empty Cart\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <h2>Error</h2>\r\n      <p>Something went wrong!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Shop from \"./components/Shop\";\r\nimport Account from \"./components/Account\";\r\nimport Orders from \"./components/Orders\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport CreateAccount from \"./components/CreateAccount\";\r\nimport Cart from \"./components/Cart\";\r\nimport Error from \"./components/Error\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Navigation />\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Shop} />\r\n                        <Route path=\"/Cart/\" component={Cart} />\r\n                        <Route path=\"/Account/\" component={Account} />\r\n                        <Route path=\"/Orders/\" component={Orders} />\r\n                        <Route path=\"/SignIn/\" component={SignIn} />\r\n                        <Route path=\"/CreateAccount/\" component={CreateAccount} />\r\n                        <Route component={Error} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport * as firebase from \"firebase\";\r\nimport { firebaseConfig } from \"./config\";\r\nimport App from \"./App\";\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}